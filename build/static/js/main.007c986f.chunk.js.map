{"version":3,"sources":["redux/redux.js","components/Header.jsx","components/Input.jsx","components/ListContents.jsx","components/ReadContents.jsx","components/HistoryContents.jsx","components/App.jsx","index.js"],"names":["initialState","currentView","checkedUnRead","unReadUrlLists","index","url","name","date","checked","readUrlLists","readDate","store","createStore","state","action","type","Object","assign","newView","length","unReadList","nonDeleteUnReadListArr","slice","clone","concat","newReadList","forEach","list","push","applyMiddleware","thunk","Header","changeViewList","props","setCurrentView","changeViewRead","changeViewHistory","AppBar","position","Toolbar","Typography","variant","Tabs","Tab","label","onClick","this","Component","connect","dispatch","changeCurrentView","Input","addURL","inputURL","document","getElementById","value","setUnReadUrlLists","className","noValidate","autoComplete","TextField","id","margin","Button","color","Date","now","ListContents","checkBtn","indexVal","e","i","changeUnReadUrlCheckBox","changeRead","nonDeleteList","filter","unReadUrlList","deleteUnReadUrlLists","addReadUrlLists","changeData","toLocaleDateString","preventDefault","event","Container","List","console","log","map","ListItem","key","ListItemAvatar","Avatar","alt","src","Link","href","ListItemText","primary","ListItemSecondaryAction","Checkbox","onChange","toggleUnReadUrlCheckBox","ReadContents","readUrlList","HistoryContents","App","urlLists","theme","createMuiTheme","palette","light","main","dark","contrastText","secondary","ReactDOM","render"],"mappings":"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","file":"static/js/main.007c986f.chunk.js","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\n// initial STATE\nconst initialState = {\n  currentView: \"LIST\",\n  checkedUnRead: [],\n  unReadUrlLists: [\n    {\n      index: 0,\n      url: \"https://www.starbucks.co.jp/\",\n      name: \"HOMEPAGE - STARBUCK JAPAN\",\n      date: 1573550388676,\n      checked: true\n    },\n    {\n      index: 1,\n      url: \"https://stories.starbucks.com/\",\n      name: \"HOMEPAGE - STARBUCK US\",\n      date: 1573550405225,\n      checked: false\n    },\n    {\n      index: 2,\n      url:\n        \"https://stories.starbucks.com/stories/2019/make-merry-at-starbucks-this-holiday/\",\n      name: \"Make merry at Starbucks this holiday season\",\n      date: 1573550405225,\n      checked: false\n    }\n  ],\n  readUrlLists: [\n    {\n      url: \"https://martinfowler.com/bliki/ContinuousDelivery.html\",\n      name: \"ContinuousDelivery\",\n      date: 1573550388676,\n      readDate: 1573550405225\n    },\n    {\n      url: \"https://will.koffel.org/post/2014/12-factor-apps-in-plain-english/\",\n      name: \"12 FACTOR APPS IN PLAIN ENGLISH\",\n      date: 1573550388676,\n      readDate: 1573550405225\n    },\n    {\n      url:\n        \"https://itnext.io/how-existing-redux-patterns-compare-to-the-new-redux-hooks-b56134c650d2\",\n      name: \"How Redux Connect compares to the new Redux Hooks.\",\n      date: 1573550388676,\n      readDate: 1573550405225\n    }\n  ]\n};\n\n// ACTIONS\nexport const changeCurrentView = newView => ({\n  type: \"CURRENT_VIEW\",\n  newView\n});\n\nexport const addUnReadUrlLists = newUnReadList => ({\n  type: \"ADD_UNREAD_URL_LISTS\",\n  unReadList: newUnReadList,\n  name: \"DEFAULT NAME\",\n  date: Date.now(),\n  checked: false\n});\n\nexport const deleteUnReadUrlLists = nonDeleteUnReadListArr => ({\n  type: \"DELETE_UNREAD_URL_LISTS\",\n  nonDeleteUnReadListArr\n});\n\nexport const toggleUnReadUrlCheckBox = index => ({\n  type: \"TOGGLE_UNREAD_CHECK_BOX\",\n  index\n});\n\nexport const addReadUrlLists = newReadList => ({\n  type: \"ADD_READ_URL_LISTS\",\n  newReadList,\n  readDate: Date.now()\n});\n\nexport const getUnReadUrlLists = getUnReadList => ({\n  type: \"GET_UNREAD_URL_LISTS\",\n  getUnReadList\n});\n\nexport const getReadUrlLists = getReadList => ({\n  type: \"GET_READ_URL_LISTS\",\n  getReadList\n});\n\n// ACTION CREATER\n// export const getUnReadUrlListsAsync = dispatch => {\n//   const\n// }\n\n// REDUCERS\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CURRENT_VIEW\": {\n      return Object.assign({}, state, { currentView: action.newView });\n    }\n    case \"ADD_UNREAD_URL_LISTS\": {\n      if (state.unReadUrlLists.length === 0)\n        state.unReadUrlLists = initialState.unReadUrlLists;\n      return Object.assign({}, state, {\n        unReadUrlLists: [\n          ...state.unReadUrlLists,\n          {\n            index:\n              state.unReadUrlLists[state.unReadUrlLists.length - 1].index + 1,\n            url: action.unReadList,\n            name: action.name,\n            date: action.date,\n            checked: action.checked\n          }\n        ]\n      });\n    }\n    case \"DELETE_UNREAD_URL_LISTS\": {\n      return Object.assign({}, state, {\n        unReadUrlLists: action.nonDeleteUnReadListArr\n      });\n    }\n    case \"TOGGLE_UNREAD_CHECK_BOX\": {\n      return Object.assign({}, state, {\n        unReadUrlLists: [\n          ...state.unReadUrlLists.slice(0, action.index),\n          {\n            ...state.unReadUrlLists[action.index],\n            checked: !state.unReadUrlLists[action.index].checked\n          },\n          ...state.unReadUrlLists.slice(action.index + 1)\n        ]\n      });\n    }\n    case \"ADD_READ_URL_LISTS\": {\n      const clone = state.readUrlLists.concat();\n      action.newReadList.forEach(list => {\n        clone.push({\n          url: list.url,\n          name: list.name,\n          date: list.date,\n          readDate: action.readDate\n        });\n      });\n      return Object.assign({}, state, {\n        readUrlLists: clone\n      });\n    }\n    case \"GET_UNREAD_URL_LISTS\": {\n      return state;\n    }\n    case \"GET_READ_URL_LISTS\": {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\n// STORE\nconst store = createStore(reducer, applyMiddleware(thunk));\nexport default store;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { changeCurrentView } from \"../redux/redux\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport \"../styles/styles.css\";\n\nclass Header extends Component {\n  changeViewList = () => {\n    this.props.setCurrentView(\"LIST\");\n  };\n  changeViewRead = () => {\n    this.props.setCurrentView(\"READ\");\n  };\n  changeViewHistory = () => {\n    this.props.setCurrentView(\"HISTORY\");\n  };\n\n  render() {\n    return (\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\">Coffee Time</Typography>\n          <Tabs>\n            <Tab label=\"LIST\" onClick={this.changeViewList} />\n            <Tab label=\"READ\" onClick={this.changeViewRead} />\n            <Tab label=\"HISTORY\" onClick={this.changeViewHistory} />\n          </Tabs>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrentView: newView => dispatch(changeCurrentView(newView))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Header);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { addUnReadUrlLists } from \"../redux/redux\";\nimport \"../styles/styles.css\";\n\nclass Input extends Component {\n  // Click Button\n  addURL = () => {\n    const inputURL = document.getElementById(\"standard-basic\").value;\n    if (inputURL !== \"\") this.props.setUnReadUrlLists(inputURL);\n  };\n\n  render() {\n    return (\n      <div className=\"inputArea\">\n        <form noValidate autoComplete=\"off\">\n          <div>\n            <TextField\n              id=\"standard-basic\"\n              className=\"inputArea\"\n              label=\"Please input URL\"\n              margin=\"normal\"\n            />\n            <Button variant=\"contained\" color=\"primary\" onClick={this.addURL}>\n              ADD\n            </Button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setUnReadUrlLists: inputURL => dispatch(addUnReadUrlLists(inputURL))\n  };\n};\nexport default connect(null, mapDispatchToProps)(Input);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Container from \"@material-ui/core/Container\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Link from \"@material-ui/core/Link\";\nimport Input from \"./Input.jsx\";\nimport {\n  toggleUnReadUrlCheckBox,\n  deleteUnReadUrlLists,\n  addReadUrlLists\n} from \"../redux/redux\";\nimport \"../styles/styles.css\";\n\nclass ListContents extends Component {\n  checkBtn = indexVal => e => {\n    const unReadUrlLists = this.props.unReadUrlLists;\n    let index;\n    unReadUrlLists.forEach((unReadUrlLists, i) => {\n      if (unReadUrlLists.index === indexVal) index = i;\n    });\n    this.props.changeUnReadUrlCheckBox(index);\n  };\n  changeRead = () => {\n    // DELETE FROM UN READ LIST\n    const unReadUrlLists = this.props.unReadUrlLists;\n    const nonDeleteList = unReadUrlLists.filter(\n      unReadUrlList => !unReadUrlList.checked\n    );\n    if (nonDeleteList.length !== unReadUrlLists.length)\n      this.props.deleteUnReadUrlLists(nonDeleteList);\n\n    // ADD TO READ LIST\n    const newReadList = unReadUrlLists.filter(\n      unReadUrlList => unReadUrlList.checked\n    );\n    this.props.addReadUrlLists(newReadList);\n  };\n  changeData = date => {\n    const d = new Date(date);\n    const dispDate = d.toLocaleDateString();\n    return dispDate;\n  };\n  render() {\n    const unReadUrlLists = this.props.unReadUrlLists;\n    const preventDefault = event => event.preventDefault();\n\n    return (\n      <Container>\n        <Input />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.changeRead}\n          className=\"changeRead\"\n        >\n          CHANGE TO READ\n        </Button>\n        <List>\n          {console.log(\"all list\", unReadUrlLists)}\n          {unReadUrlLists.map((unReadUrlList, i) => (\n            //  console.log(unReadUrlList.date)\n            <ListItem key={i}>\n              <ListItemAvatar>\n                <Avatar alt=\"Avatar\" src={`../images/image.png`} />\n              </ListItemAvatar>\n              <Link href={unReadUrlList.url} onClick={preventDefault}>\n                {unReadUrlList.url}\n              </Link>\n              {/* <ListItemText className=\"date\" primary={unReadUrlList.date} /> */}\n              <ListItemText\n                className=\"date\"\n                primary={this.changeData(unReadUrlList.date)}\n              />\n              <ListItemSecondaryAction>\n                <Checkbox\n                  checked={unReadUrlList.checked}\n                  onChange={this.checkBtn(unReadUrlList.index)}\n                  color=\"primary\"\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    unReadUrlLists: state.unReadUrlLists\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeUnReadUrlCheckBox: index => dispatch(toggleUnReadUrlCheckBox(index)),\n    deleteUnReadUrlLists: nonDeleteList =>\n      dispatch(deleteUnReadUrlLists(nonDeleteList)),\n    addReadUrlLists: newReadList => dispatch(addReadUrlLists(newReadList))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ListContents);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Container from \"@material-ui/core/Container\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Link from \"@material-ui/core/Link\";\nimport \"../styles/styles.css\";\n\nclass ReadContents extends Component {\n  render() {\n    const readUrlLists = this.props.readUrlLists;\n    const preventDefault = event => event.preventDefault();\n\n    return (\n      <Container>\n        <h1>Hello, it's coffee time!</h1>\n        <div className=\"urllistArea\">\n          {console.log(\"all READ list\", readUrlLists)}\n          {readUrlLists.map((readUrlList, i) => (\n            <ListItem key={i}>\n              <ListItemAvatar>\n                <Avatar alt=\"Avatar\" src={`../images/image.png`} />\n              </ListItemAvatar>\n              <Link href={readUrlList.url} onClick={preventDefault}>\n                {readUrlList.url}\n              </Link>\n              <ListItemText className=\"date\" primary={readUrlList.date} />\n            </ListItem>\n          ))}\n        </div>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    readUrlLists: state.readUrlLists\n  };\n};\nexport default connect(mapStateToProps)(ReadContents);\n","import React, { Component } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport \"../styles/styles.css\";\nimport \"../styles/chart.css\";\n\nexport default class HistoryContents extends Component {\n  render() {\n    return (\n      <Container>\n        <div className=\"chartArea\"></div>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Container from \"@material-ui/core/Container\";\nimport Header from \"./Header.jsx\";\nimport ListContents from \"./ListContents.jsx\";\nimport ReadContents from \"./ReadContents.jsx\";\nimport HistoryContents from \"./HistoryContents.jsx\";\n// import { getUnReadUrlListsAsync } from \"../redux/redux\";\nimport \"../styles/styles.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentView: \"List\",\n      urlLists: []\n    };\n  }\n\n  componentDidMount() {\n    // this.props.getUnReadUrlListsAsync();\n  }\n\n  render() {\n    return (\n      <Container id=\"app\">\n        <Header />\n\n        {(() => {\n          if (this.props.currentView === \"LIST\") {\n            return <ListContents />;\n          } else if (this.props.currentView === \"READ\") {\n            return <ReadContents />;\n          } else {\n            return <HistoryContents />;\n          }\n        })()}\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentView: state.currentView\n  };\n};\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     getUnReadUrlListsAsync: () => dispatch(getUnReadUrlListsAsync)\n//   };\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(App);\nexport default connect(mapStateToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App.jsx\";\nimport store from \"./redux/redux\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\n// Change Color palette with material-ui\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: \"#757c338364e8\",\n      main: \"#00653e\",\n      dark: \"#00462b\",\n      contrastText: \"#fff\"\n    },\n    secondary: {\n      light: \"#ff7977625861\",\n      main: \"#563b2f\",\n      dark: \"#3c2920\",\n      contrastText: \"#fff\"\n    }\n  }\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <MuiThemeProvider theme={theme}>\n      <App />\n    </MuiThemeProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}